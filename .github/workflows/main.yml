name: commit-stage
on: push
env:
  REGISTRY: ghcr.io
  VERSION: latest
  JAVA_VERSION: 17
jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    strategy:
      matrix:
        service: [catalog-service,config-server]
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4.1.3
      - name: Set up JDK
        uses: actions/setup-java@v4.3.0
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle
#      - name: Code vulnerability scanning
#        uses: anchore/scan-action@v4
#        id: scan
#        with:
#          path: "${{ github.workspace }}"
#          fail-build: false
#          severity-cutoff: 'high'
#      - name: Upload Vulnerability report
#        uses: github/codeql-action/upload-sarif@v3
#        if: always()
#        with:
#          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Build, unit test, and Integration Test
        run: |
          chmod +x gradlew
          ./gradlew :${{ matrix.service }}:build
    outputs:
      workspace: ${{ steps.checkout.outputs.workspace }}
  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    strategy:
      matrix:
        service: [catalog-service,config-server]
    steps:
      - name: Set up JDK
        uses: actions/setup-java@v4.3.0
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle
      - name: Build container image
        run: |
          chmod +x gradlew
          ./gradlew :${{ matrix.service }}:bootBuildImage \
            --imageName ${{ env.REGISTRY }}/${{ matrix.service }}:${{ env.VERSION }}
#      - name: OCI image vulnerability scan
#        uses: anchore/scan-action@v4
#        id: scan
#        with:
#          image: ${{ env.REGISTRY }}/${{ matrix.service }}:${{ env.VERSION }}
#          fail-build: false
#          severity-cutoff: 'high'
#      - name: Upload Vulnerability report
#        uses: github/codeql-action/upload-sarif@v3
#        if: always()
#        with:
#          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Log into container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: $${{ secrets.CR_PAT }}
      - name: Publish container Image
        run: docker push ${{ env.REGISTRY }}/${{ matrix.service }}:${{ env.VERSION }}


