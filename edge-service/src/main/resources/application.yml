spring:
  application:
        name: edge-service

  cloud:
        gateway:
            httpclient:
                connect-timeout: 2000
                response-timeout: 5s
                pool:
                    type: elastic
                    max-idle-time: 15s
                    max-life-time: 60s
            default-filters:
                - name: Retry
                  args:
                    retries: 3
                    methods: GET
                    series: SERVER_ERROR
                    exceptions: java.io.IOException, java.util.concurrent.TimeoutException
                    backoff:
                      firstBackoff: 50ms
                      maxBackOff: 500ms
                      factor: 2
                      basedOnPreviousValue: false
                - name: RequestRateLimiter
                  args:
                    redis-rate-limiter:
                      replenishRate: 10
                      burstCapacity: 20
                      requestedTokens: 1
            routes:
                - id: catalog-route
                  uri: ${CATALOG_SERVICE_URL:http://localhost:9001}/books
                  predicates:
                      - Path=/books/**
                  filters:
                      - name: CircuitBreaker
                        args:
                            name: catalogCircuitBreaker
                            fallbackUri: forward:/catalog-fallback
                - id: order-route
                  uri: ${ORDER_SERVICE_URL:http://localhost:9002}/orders
                  predicates:
                     - Path=/orders/**
  data:
    redis:
      host: localhost
      port: 6379
      connect-timeout: 5s
      timeout: 1s
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: edge-service
            client-secret: keycloak-secret
            scope: openid
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/bookshop

server:
  port: 9000
  shutdown: graceful
